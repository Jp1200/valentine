{"version":3,"sources":["Components/poems.js","Components/heart.js","App.js","reportWebVitals.js","index.js"],"names":["poems","Poem","props","componentDidMount","e","console","log","state","poem","className","this","rand","React","Component","no","alert","Heart","max","poem_vis","useState","onClick","document","getElementsByClassName","classList","add","width","height","viewBox","points","Math","floor","random","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src","getElementById"],"mappings":"2RAEMA,G,MAAO,CAAC,MAAQ,CAAC,CAAC,MAAQ,iBAAkB,OAAU,WAAY,MAAQ,wpBAoBhF,CAAC,MAAQ,aAAc,OAAU,KAAM,MAAQ,mKAM/C,CAAC,MAAQ,sBAAuB,OAAU,6BAA8B,MAAQ,goBAsB3DC,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAGVC,kBAAkB,SAACC,GACfC,QAAQC,IAAI,YAHZ,EAAKC,MAAQ,CAACC,KAAMR,GAFL,E,qDAQf,OACI,qBAAKS,UAAU,OAAf,SACI,gCACA,sBAAMA,UAAU,QAAhB,SAAyBC,KAAKH,MAAMC,KAAX,MAAyBE,KAAKR,MAAMS,MAApC,QACzB,mBAAGF,UAAU,sBAAb,SAEKC,KAAKH,MAAMC,KAAX,MAAyBE,KAAKR,MAAMS,MAApC,QAEL,sBAAMF,UAAU,SAAhB,SAA0BC,KAAKH,MAAMC,KAAX,MAAyBE,KAAKR,MAAMS,MAApC,kB,GAjBRC,IAAMC,WC7CxC,SAASC,IACLC,MAAM,gDAwCKC,MAlCf,WACI,IALkBC,EAKZC,EAAWC,mBAAS,QAI1B,OAEI,gCACI,wBAAQV,UAAU,eAAlB,8CAGA,sBAAKA,UAAU,aAAf,UACI,yBAAQA,UAAU,MAAMW,QAVpC,WACQF,GAAUG,SAASC,uBAAuB,QAAQ,GAAGC,UAAUC,IAAI,SAS/D,UACI,sBAAKC,MAAM,QAAQC,OAAO,OAAOC,QAAQ,aAAalB,UAAU,SAAhE,UACA,0BAAUmB,OAAO,8BAA8BnB,UAAU,YACzD,0BAAUmB,OAAO,8BAA8BnB,UAAU,eAEzD,sBAAMA,UAAU,eAAhB,uBAEJ,yBAAQA,UAAU,MAAMW,QAASN,EAAjC,UAAqC,sBAAKW,MAAM,QAAQC,OAAO,OAAOC,QAAQ,aAAalB,UAAU,SAAhE,UACjC,0BAAUmB,OAAO,8BAA8BnB,UAAU,YACzD,0BAAUmB,OAAO,8BAA8BnB,UAAU,eAEzD,sBAAMA,UAAU,eAAhB,yBAGR,cAAC,EAAD,CAAME,MA9BIM,EA8Be,EA7B1BY,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMb,WCOlCe,MAbf,WACE,OACE,qBAAKvB,UAAU,MAAf,SACE,cAAC,EAAD,OCMSwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,wBAAQC,IAAI,kCACZ,cAAC,EAAD,OAEFxB,SAASyB,eAAe,SAM1Bb,M","file":"static/js/main.9f683c68.chunk.js","sourcesContent":["import React from 'react';\nimport './poem.css';\nconst poems ={\"poems\":[{\"title\":\"Love Sonnet XI\", \"author\": \"P.Neruda\", \"lines\": `I crave your mouth, your voice, your hair.\nSilent and starving, I prowl through the streets.\nBread does not nourish me, dawn disrupts me, all day\nI hunt for the liquid measure of your steps.\n \n \nI hunger for your sleek laugh,\nyour hands the color of a savage harvest,\nhunger for the pale stones of your fingernails,\nI want to eat your skin like a whole almond.\n \n \nI want to eat the sunbeam flaring in your lovely body,\nthe sovereign nose of your arrogant face,\nI want to eat the fleeting shade of your lashes,\n \n \nand I pace around hungry, sniffing the twilight,\nhunting for you, for your hot heart,\nlike a puma in the barrens of Quitratue.`},\n{\"title\":\"Secret Sea\", \"author\": \"JP\", \"lines\": `Secret sea, wait to see. \nI miss the sand, beneath my feet.\nSecret sea, where lovers meet.\nWhere love is Heavens' reach.\nwithout such, is not much treat.\n`},\n{\"title\":\"How Do I Love Thee?\", \"author\": \"Elizabeth Barrett Browning\", \"lines\": `How do I love thee? Let me count the ways.\nI love thee to the depth and breadth and height\nMy soul can reach, when feeling out of sight\nFor the ends of being and ideal grace.\nI love thee to the level of every day's\nMost quiet need, by sun and candle-light.\nI love thee freely, as men strive for right.\nI love thee purely, as they turn from praise.\nI love thee with the passion put to use\nIn my old griefs, and with my childhood's faith.\nI love thee with a love I seemed to lose\nWith my lost saints. I love thee with the breath,\nSmiles, tears, of all my life; and, if God choose,\nI shall but love thee better after death.`}\n]\n\n\n\n\n\n\n};\nexport default class Poem extends React.Component{\n    constructor(props) {\n        super(props)\n        this.state = {poem: poems};\n      }\n    componentDidMount=(e)=>{\n        console.log(\"mounted\")\n    }\n    render(){\n        return(\n            <div className=\"poem\">\n                <div>\n                <span className=\"title\">{this.state.poem[\"poems\"][this.props.rand][\"title\"]}</span>\n                <p className='poem-p unselectable'>\n                    \n                    {this.state.poem[\"poems\"][this.props.rand][\"lines\"]}\n                </p>\n                <span className=\"author\">{this.state.poem[\"poems\"][this.props.rand][\"author\"]}</span>\n                </div>\n            </div>\n            );\n    }\n};\n\n\n\n\n","import React, {useState} from 'react';\n// import * as d3 from \"d3\";\nimport './heartcss.css';\nimport Poem from './poems.js';\n\nfunction no(){\n    alert(\"Ummm you actualy can't click that option....\")\n}\nfunction getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\nfunction Heart(){\n    const poem_vis = useState(\"true\")\n    function showPoem(){\n        if (poem_vis){document.getElementsByClassName(\"poem\")[0].classList.add(\"show\")}\n    }\n    return(\n        \n        <div >\n            <header className='unselectable'>\n                Nikki, will you be my Valentine?\n            </header>\n            <div className='btn-holder'>\n                <button className='btn' onClick={showPoem}>\n                    <svg width=\"180px\" height=\"60px\" viewBox=\"0 0 180 60\" className=\"border\">\n                    <polyline points=\"179,1 179,59 1,59 1,1 179,1\" className=\"bg-line\" />\n                    <polyline points=\"179,1 179,59 1,59 1,1 179,1\" className=\"hl-line\" />\n                    </svg>\n                    <span className='unselectable'>Yes (;</span>\n                </button>\n                <button className='btn' onClick={no}><svg width=\"180px\" height=\"60px\" viewBox=\"0 0 180 60\" className=\"border\">\n                    <polyline points=\"179,1 179,59 1,59 1,1 179,1\" className=\"bg-line\" />\n                    <polyline points=\"179,1 179,59 1,59 1,1 179,1\" className=\"hl-line\" />\n                    </svg>\n                    <span className='unselectable'>No );</span>\n                </button>\n            </div>\n            <Poem rand={getRandomInt(3)} ></Poem>\n        </div>\n    )\n\n\n};\n\n\nexport default Heart;","\nimport './App.css';\nimport Heart from './Components/heart';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Heart></Heart>\n      \n\n\n     \n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <script src=\"https://d3js.org/d3.v6.min.js\"></script>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}